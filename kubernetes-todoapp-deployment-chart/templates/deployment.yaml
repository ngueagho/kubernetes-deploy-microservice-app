# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: {{ include "kubernetes-todoapp-deployment-chart.fullname" . }}
#   labels:
#     {{- include "kubernetes-todoapp-deployment-chart.labels" . | nindent 4 }}
# spec:
#   {{- if not .Values.autoscaling.enabled }}
#   replicas: {{ .Values.replicaCount }}
#   {{- end }}
#   selector:
#     matchLabels:
#       {{- include "kubernetes-todoapp-deployment-chart.selectorLabels" . | nindent 6 }}
#   template:
#     metadata:
#       {{- with .Values.podAnnotations }}
#       annotations:
#         {{- toYaml . | nindent 8 }}
#       {{- end }}
#       labels:
#         {{- include "kubernetes-todoapp-deployment-chart.labels" . | nindent 8 }}
#         {{- with .Values.podLabels }}
#         {{- toYaml . | nindent 8 }}
#         {{- end }}
#     spec:
#       {{- with .Values.imagePullSecrets }}
#       imagePullSecrets:
#         {{- toYaml . | nindent 8 }}
#       {{- end }}
#       serviceAccountName: {{ include "kubernetes-todoapp-deployment-chart.serviceAccountName" . }}
#       securityContext:
#         {{- toYaml .Values.podSecurityContext | nindent 8 }}
#       containers:
#         - name: {{ .Chart.Name }}
#           securityContext:
#             {{- toYaml .Values.securityContext | nindent 12 }}
#           image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
#           imagePullPolicy: {{ .Values.image.pullPolicy }}
#           ports:
#             - name: http
#               containerPort: {{ .Values.service.port }}
#               protocol: TCP
#           livenessProbe:
#             {{- toYaml .Values.livenessProbe | nindent 12 }}
#           readinessProbe:
#             {{- toYaml .Values.readinessProbe | nindent 12 }}
#           resources:
#             {{- toYaml .Values.resources | nindent 12 }}
#           {{- with .Values.volumeMounts }}
#           volumeMounts:
#             {{- toYaml . | nindent 12 }}
#           {{- end }}
#       {{- with .Values.volumes }}
#       volumes:
#         {{- toYaml . | nindent 8 }}
#       {{- end }}
#       {{- with .Values.nodeSelector }}
#       nodeSelector:
#         {{- toYaml . | nindent 8 }}
#       {{- end }}
#       {{- with .Values.affinity }}
#       affinity:
#         {{- toYaml . | nindent 8 }}
#       {{- end }}
#       {{- with .Values.tolerations }}
#       tolerations:
#         {{- toYaml . | nindent 8 }}
#       {{- end }}






# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   creationTimestamp: null
#   labels:
#     app: todoappfrontend
#   name: todoappfrontend
#   namespace: todoapp
# spec:
#   replicas: 3
#   selector:
#     matchLabels:
#       app: todoappfrontend
#   strategy: {}
#   template:
#     metadata:
#       creationTimestamp: null
#       labels:
#         app: todoappfrontend
#     spec:
#       containers:
#       - image: robertolandry/todoappfrontend:latest
#         name: todoappfrontend
#         resources: {}
# status: {}






# # --- 
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   creationTimestamp: null
#   labels:
#     app: todoappdb
#   name: todoappdb
#   namespace: todoapp
# spec:
#   replicas: 3
#   selector:
#     matchLabels:
#       app: todoappdb
#   strategy: {}
#   template:
#     metadata:
#       creationTimestamp: null
#       labels:
#         app: todoappdb
#     spec:
#       containers:
#         - image: robertolandry/todoappdb:latest
#           name: todoappdb
#           volumeMounts:
#             - mountPath: /var/lib/postgresql/data
#               name: db-save
#               readOnly: false
#             - mountPath: /docker-entrypoint-initdb.d/init.sql
#               name: initsql
#               subPath: init.sql
#           env:
#             - name: POSTGRES_USER
#               value: "postgres"
#             - name: POSTGRES_PASSWORD
#               value: "password"
#             - name: POSTGRES_DB
#               value: "todoapp"
#       volumes:
#         - name: db-save
#           hostPath:
#             path: /home/admin/db-save # directory location on host
#             type: DirectoryOrCreate
#         - name: initsql
#           hostPath:
#             path: /home/admin/db-save/init.sql
#             type: FileOrCreate










